name: Desplegar a Preproducci√≥n

on:
  workflow_dispatch:
    inputs:
      comentario:
        description: 'Comentario de despliegue'
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üîÅ Checkout del repositorio
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üß© Extraer versi√≥n desde pom.xml
        id: version
        run: |
          version=$(xmllint --xpath "string(//project/version)" pom.xml)
          echo "VERSION_EXTRAIDA=$version" >> $GITHUB_OUTPUT

      - name: üîñ Crear tag si no existe
        run: |
          git fetch --tags
          if git rev-parse "v${{ steps.version.outputs.VERSION_EXTRAIDA }}" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è El tag v${{ steps.version.outputs.VERSION_EXTRAIDA }} ya existe."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag -a v${{ steps.version.outputs.VERSION_EXTRAIDA }} -m "${{ github.event.inputs.comentario }}"
            git push origin v${{ steps.version.outputs.VERSION_EXTRAIDA }}
            echo "‚úÖ Tag v${{ steps.version.outputs.VERSION_EXTRAIDA }} creado."
          fi

      - name: ‚öôÔ∏è Instalar dependencias
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          pip install -r requirements.txt

      - name: üöÄ Desplegar en entorno Preproducci√≥n
        env:
          DB_NAME: ${{ secrets.PGDATABASE_PRE }}
          DB_USER: ${{ secrets.PGUSER_PRE }}
          DB_PASSWORD: ${{ secrets.PGPASSWORD_PRE }}
          DB_HOST: ${{ secrets.PGHOST_PRE }}
          DB_PORT: ${{ secrets.PGPORT_PRE }}
        run: python main.py

      - name: ‚úÖ Finalizado
        run: echo "üéâ Despliegue a Preproducci√≥n finalizado con √©xito."
