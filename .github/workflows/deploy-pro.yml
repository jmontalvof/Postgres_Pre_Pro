name: Desplegar a Producci√≥n desde √∫ltimo commit con Tag

on:
  workflow_dispatch:
    inputs:
      comentario:
        description: "Comentario del despliegue"
        required: false

jobs:
  deploy:
    name: Desplegar en Producci√≥n
    runs-on: ubuntu-latest
    environment:
      name: produccion

    steps:
      - name: üîÅ Clonar repositorio con tags
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üè∑Ô∏è Generar versi√≥n
        id: versioning
        run: |
          ultimo_tag=$(git tag --sort=-v:refname | head -n 1)
          echo "√öltimo tag: $ultimo_tag"
          if [[ "$ultimo_tag" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major=${BASH_REMATCH[1]}
            minor=${BASH_REMATCH[2]}
            patch=${BASH_REMATCH[3]}
            nueva_version="v$major.$minor.$((patch+1))"
          else
            nueva_version="v1.0.0"
          fi
          echo "version=$nueva_version" >> $GITHUB_OUTPUT

      - name: üè∑Ô∏è Crear y subir tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag -a ${{ steps.versioning.outputs.version }} -m "${{ github.event.inputs.comentario || 'Tag generado autom√°ticamente' }}"
          git push origin ${{ steps.versioning.outputs.version }}

      - name: ‚öôÔ∏è Instalar dependencias
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          pip install -r requirements.txt

      - name: üöÄ Ejecutar main.py
        env:
          DB_NAME: ${{ secrets.PGDATABASE_PROD }}
          DB_USER: ${{ secrets.PGUSER_PROD }}
          DB_PASSWORD: ${{ secrets.PGPASSWORD_PROD }}
          DB_HOST: ${{ secrets.PGHOST_PROD }}
          DB_PORT: ${{ secrets.PGPORT_PROD }}
        run: python main.py
